{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hooks.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/ErrorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","View","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharlist","newItemLoading","setnewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","comicId","resourceURI","substring","to","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","CharSearchForm","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.b2a803cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"230px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\",\r\n    _apiKey = \"apikey=aa2c874a5391b732985da0ed1ea67672\",\r\n    _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  // Вариант модификации готового метода для поиска по имени.\r\n  // Вызывать его можно вот так: getAllCharacters(null, name)\r\n\r\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\r\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\r\n  //     return res.data.results.map(_transformCharacter);\r\n  // }\r\n\r\n  // Или можно создать отдельный метод для поиска по имени\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={\n          thumbnail ===\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n            ? { objectFit: \"contain\" }\n            : { objectFit: \"cover\" }\n        }\n      />\n\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../spinner/Spinner\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n  const [charList, setCharlist] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharlist((charList) => [...charList, ...newCharList]);\n    setOffset((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"contain\" };\n      }\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./charInfo.scss\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharacter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no commics with this character\"}\n        {comics.map((item, i) => {\n          if (i > 9) return;\n          const comicId = item.resourceURI.substring(43);\n          return (\n            <Link\n              to={`/comics/${comicId}`}\n              key={i}\n              className=\"char__comics-item\"\n              style={\n                thumbnail ===\n                \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n                  ? { objectFit: \"unset\" }\n                  : { objectFit: \"cover\" }\n              }\n            >\n              {item.name}\n            </Link>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\"char__search-critical-error\">\r\n      <ErrorMessage />\r\n    </div>\r\n  ) : null;\r\n  const results = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {char[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${char[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{\r\n          charName: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button__main\"\r\n              disabled={loading}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import RandomChar from \"../randomChar/RandomChar\";\r\nimport { useState } from \"react\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}